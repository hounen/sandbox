//*************************************************************
//* NAME        : dump.cpp
//* FUNCTION    : 16進ダンプ機能
//* PROGRAMMED  : 15.07.14 Balto/藤本
//* HISTORY     :
//* ID --- DATE --- NAME  ---- NOTE ---------------------------
//*[PRJ000]15.07.14 Balto/藤本 新規作成
//*************************************************************
#include <fstream>
#include <string>
#include <iomanip>

#include "error.h"

using namespace std;

//*------------------------------------------------------------
//* NAME        : Dump
//* FUNCTION    : 
//* INPUT       : const char *spInput		: 入力ファイル名
//* OUTPUT      : const char *spOutput		: 出力ファイル名
//* RETURN      : 0
//* PROGRAMMED  : 15.07.14 Balto/藤本
//* REMARKS     :
//*------------------------------------------------------------
void Dump(const char *spInput, const char *spOutput)
{	
	//---------------------------------------------------------
	// 入力ファイルをオープンする
	//---------------------------------------------------------
	ifstream ifs(spInput, ios::binary);
	if(!ifs){						// 入力ファイルオープン失敗？
		ClsError error(INPUT_OPEN_ERROR, 0);
		throw error;
	}
	//---------------------------------------------------------
	// 入力ファイルをすべて読み込む
	//---------------------------------------------------------
	string sInputData;
	ifs >> sInputData;

	//---------------------------------------------------------
	// 入力ファイルをクローズする
	//---------------------------------------------------------
	ifs.close();
	
	//---------------------------------------------------------
	// 出力ファイルをオープンする
	//---------------------------------------------------------
	ofstream ofs(spOutput);//trunc
	
	if(!ofs){					// 出力ファイルオープン失敗？
		ClsError error(OUTPUT_OPEN_ERROR, 0);
		throw error;
	}

	//---------------------------------------------------------
	// タイトル行を挿入する
	//---------------------------------------------------------
	ofs << "#ADDRESS   0 1  2 3  4 5  6 7   8 9  A B  C D  E F";
		
	//---------------------------------------------------------
	// 読み込んだデータの終端まで1文字ずつ読み進める
	//---------------------------------------------------------
	size_t iSizeMax = sInputData.size();
	for(int iCharCount = 0; iCharCount < iSizeMax; ++iCharCount){	//　文字数カウンタ
		if(iCharCount % 16 == 0){
			ofs << endl
				<< "$"
				<< setw(8)			// フィールド幅 8
				<< setfill('0')		// 0で埋める
				<< hex				// 16進数
				<< right			// 右詰
				<< iCharCount;
		}
		if(iCharCount % 16 == 8){	// 8バイトごとに空白
			ofs << " ";
		}
		if(iCharCount % 2 == 0){	// 2バイトごとに空白
			ofs << " ";
		}
		//---------------------------------------------------------
		// 16進数2桁で書き込む
		//---------------------------------------------------------
		ofs  << setw(2)				// フィールド幅 2
  			 << setfill('0')		// 0で埋める
			 << hex					// 16進数
			 << uppercase			// 大文字
			 << (unsigned int)sInputData[iCharCount];		
	}	//for

	//---------------------------------------------------------
	// 改行を書き込む
	//---------------------------------------------------------
	ofs << endl;

	//---------------------------------------------------------
	// 出力ファイルをクローズする
	//---------------------------------------------------------
	ofs.close();
	
}
